---
- name: Pre-install
  hosts: all
  become: true
  remote_user: admin
  gather_facts: false
  tags: 'Done'

  tasks:
    - name: Add group
      ansible.builtin.group:
        name: "prometheus"
        state: present
        system: true

    - name: Add user
      ansible.builtin.user:
        name: "prometheus"
        group: "prometheus"
        create_home: false
        system: true
        state: present

    - name: Check dirs
      ansible.builtin.file:
        path: '{{ item }}'
        state: directory
        owner: "prometheus"
        group: 'prometheus'
        mode: '755'
        recurse: true
      loop:
        - "/etc/prometheus"
        - '/etc/prometheus/node_exporter'
        - "/var/lib/prometheus"

- name: Download and copy files
  hosts: prometheus_server
  become: true
  remote_user: admin
  gather_facts: false
  tags: 'Done'

  tasks:

    - name: Download and unpack apps
      ansible.builtin.unarchive:
        remote_src: true
        src: '{{ item }}'
        dest: "/home/admin/"
      loop:
        - 'https://github.com/prometheus/node_exporter/releases/download/v1.4.0/node_exporter-1.4.0.linux-amd64.tar.gz'
        - 'https://github.com/prometheus/prometheus/releases/download/v2.42.0/prometheus-2.42.0.linux-386.tar.gz'
        - 'https://github.com/prometheus/alertmanager/releases/download/v0.25.0/alertmanager-0.25.0.linux-386.tar.gz'

    - name: Copy files to bin
      ansible.builtin.copy:
        remote_src: true
        src: '{{ item }}'
        dest: "/usr/local/bin/"
        owner: 'prometheus'
        group: 'prometheus'
        mode: '744'
      loop:
        - "/home/admin/prometheus-2.42.0.linux-386/prometheus"
        - "/home/admin/prometheus-2.42.0.linux-386/promtool"
        - '/home/admin/alertmanager-0.25.0.linux-386/amtool'
        - '/home/admin/alertmanager-0.25.0.linux-386/alertmanager'

    - name: Copy console dirs
      ansible.builtin.copy:
        remote_src: true
        src: '{{ item }}'
        dest: "/etc/prometheus/"
        owner: 'prometheus'
        group: 'prometheus'
        mode: '755'
      loop:
        - "/home/admin/prometheus-2.42.0.linux-386/console_libraries"
        - "/home/admin/prometheus-2.42.0.linux-386/consoles"

    - name: Copy node_exporter binary
      ansible.builtin.copy:
        remote_src: true
        src: '/home/admin/node_exporter-1.4.0.linux-amd64/'
        dest: '/etc/prometheus/node_exporter/'
        owner: prometheus
        group: prometheus
        mode: '755'

- name: Install Grafana
  hosts: prometheus_server
  become: true
  remote_user: admin
  gather_facts: false
  tags: 'Done'

  tasks:

    - name: Get packages
      ansible.builtin.apt:
        package:
          - adduser
          - libfontconfig1
        update_cache: true

    - name: Get package
      ansible.builtin.get_url:
        url: 'https://dl.grafana.com/oss/release/grafana_9.3.6_amd64.deb'
        dest: '/home/admin'

    - name: Install package
      ansible.builtin.apt:
        deb: '/home/admin/grafana_9.3.6_amd64.deb'

- name: Setup everything
  hosts: prometheus_server
  become: true
  remote_user: admin
  gather_facts: false
  tags: 'Done'

  tasks:

    - name: Copy services
      ansible.builtin.copy:
        src: './services/'
        dest: '/etc/systemd/system/'
        mode: '744'
      notify: Deamon reload

    - name: Copy config files
      ansible.builtin.copy:
        src: './configs/'
        dest: "/etc/prometheus/"
        owner: 'prometheus'
        group: 'prometheus'
        mode: '755'
      notify: Services restart
      tags: 'Update_conf'

    - name: Start and enable
      ansible.builtin.systemd:
        name: '{{ item }}'
        state: started
        enabled: true
      loop:
        - 'prometheus'
        - 'node_exporter'
        - 'prometheus_alertmanager'
        - 'grafana-server'

  handlers:

    - name: Deamon reload
      ansible.builtin.systemd:
        daemon_reload: true
        name: '{{ item }}'
        state: started
      loop:
        - 'prometheus'
        - 'node_exporter'
        - 'prometheus_alertmanager'

    - name: Services restart
      ansible.builtin.systemd:
        name: '{{ item }}'
        state: restarted
      loop:
        - 'prometheus'
        - 'prometheus_alertmanager'

  post_tasks:

    - name: Check avaliablity
      ansible.builtin.uri:
        url: '{{ item }}'
        status_code:
          - '200'
      loop:
        - 'http://localhost:9100'
        - 'http://localhost:9090'
        - 'http://localhost:3000'

- name: Setup Docker
  hosts: prometheus_server
  become: true
  remote_user: admin
  gather_facts: false
  tags: 'Undone'

  pre_tasks:
    - name: Install gpg-key
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Install repo
      ansible.builtin.apt_repository:
        repo: 'deb https://download.docker.com/linux/ubuntu jammy stable'
        state: present

  tasks:
    - name: Install Docker
      ansible.builtin.apt:
        package:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        update_cache: true
        state: present

    - name: Add admin to docker grp
      ansible.builtin.user:
        name: 'admin'
        group: 'docker'
        state: present

  post_tasks:
    - name: Copy daemon.json
      ansible.builtin.copy:
        src: './daemon.json'
        dest: '/etc/docker/'
        mode: '744'
      notify: Restart docker
      tags: add_daemon

  handlers:
    - name: Restart docker
      ansible.builtin.systemd:
        service: 'docker'
        state: restarted
